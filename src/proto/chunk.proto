/* defines protocol buffers sent to chunk servers */
syntax = "proto3";
package sadfs.proto.chunk;
import "common.proto";

// read request for a section of a chunk
message read_request {
	bytes   chunk_id = 1;
	uint32  offset   = 2;
	uint32  length   = 3;
}

message append_request {
	bytes                        chunk_id = 1;
	uint32                       length   = 3;
	repeated sadfs.proto.service replicas = 4;
	string                       filename = 5;
}

message append_forward_request {
	bytes                        chunk_id = 1;
	uint32                       length   = 3;
	repeated sadfs.proto.service replicas = 4;
	string                       filename = 5;
}

// container for control messages
message message_container {
	sadfs.proto.header  header = 1;
	oneof               msg {
		sadfs.proto.acknowledgement ack                = 6;
		read_request                read_req           = 7;
		append_request              append_req         = 8;
		append_forward_request      append_forward_req = 9;
		sadfs.proto.stream          stream             = 10;
	}
}
